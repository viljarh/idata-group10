generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId       Int        @id @default(autoincrement())
  username     String     @unique
  emailAddress String     @unique
  password     String
  firstName    String
  lastName     String
  phoneNumber  Int
  customerType userRole?  @default(VISITOR)
  Rental       Rental[]
  favorites    Favorite[]
  CartItem     CartItem[]
  Order        Order[]
}

model Vehicle {
  vehicleId         Int         @id @unique @default(autoincrement())
  manufacturer      String
  model             String
  year              String
  vehicleCategory   String
  transmission      String
  fuel              String
  passengerCapacity Int
  extraFeatures     String?
  mileage           Float
  image             String?
  dailyPrice        Float
  Rental            Rental[]
  Favorite          Favorite[]
  CartItem          CartItem[]
  OrderItem         OrderItem[]
}

model Rental {
  rentalId        Int          @id @default(autoincrement())
  userId          Int
  vehicleId       Int
  rentalConfirmed DateTime     @default(now())
  rentalDateFrom  DateTime
  rentalDateTo    DateTime
  totalPrice      Float
  rentalStatus    RentalStatus @default(PENDING)
  user            User         @relation(fields: [userId], references: [userId])
  vehicle         Vehicle      @relation(fields: [vehicleId], references: [vehicleId])
}

enum userRole {
  VISITOR
  REGISTRATED
  ADMIN
}

enum RentalStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELED
}

model Favorite {
  favoriteId Int     @id @default(autoincrement())
  user       User    @relation(fields: [userId], references: [userId])
  userId     Int
  vehicle    Vehicle @relation(fields: [vehicleId], references: [vehicleId])
  vehicleId  Int
}

model CartItem {
  orderId   Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [userId])
  userId    Int
  vehicle   Vehicle @relation(fields: [vehicleId], references: [vehicleId])
  vehicleId Int
  quantity  Int
}

model Order {
  orderId     Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [userId])
  userId      Int
  createdAt   DateTime    @default(now())
  orderStatus String
  totalPrice  Float
  OrderItems  OrderItem[]
}

model OrderItem {
  orderItemId Int     @id @default(autoincrement())
  Order       Order   @relation(fields: [orderId], references: [orderId])
  orderId     Int
  vehicle     Vehicle @relation(fields: [vehicleId], references: [vehicleId])
  vehicleId   Int
  quantity    Int
  price       Float
}
