// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma

model Customer {
  customerId      Int      @id @default(autoincrement())
  username        String   @unique
  emailAddress    String   @unique
  password        String
  firstName       String
  lastName        String
  telephoneNumber Int
  customerType    userRole @default(VISITOR)
  Rental          Rental[]
}

model Vehicle {
  vehicleId         Int      @id @unique
  manufacture       String
  modelType         String
  modelYear         String
  vehicleCategory   String
  transmissionType  String
  fuelType          String
  passengerCapacity Int
  extraFeatures     String
  mileage           Float
  image             String // Change 'image' to 'String' if you're storing image paths
  dailyPrice        Float
  Rental            Rental[]
  //VehicleAvailability VehicleAvailability[]
}

model Rental {
  rentalId           Int      @id @default(autoincrement())
  customerId         Customer @relation(fields: [customerCustomerId], references: [customerId])
  vehicleId          Vehicle  @relation(fields: [vehicleVehicleId], references: [vehicleId])
  rentalConfirmed    DateTime @default(now())
  rentalDateFrom     DateTime
  rentalDateTo       DateTime
  distanceDriven     Float
  totalPrice         Float
  rentalStatusId     Int
  //rentalLocation   Location     @relation(fields: [rentalLocationId], references: [locationId])
  //rentalStatus       RentalStatus @relation(fields: [rentalStatusId], references: [statusId])
  customerCustomerId Int
  vehicleVehicleId   Int
}

// model VehicleAvailability {
//   availabilityId Int      @id
//   vehicleId      Int
//   rentalDateFrom DateTime
//   rentalDateTo   DateTime
//   rentalStatusId Int
//   vehicle        Vehicle  @relation(fields: [vehicleId], references: [vehicleId])
//   //rentalStatus   RentalStatus @relation(fields: [rentalStatusId], references: [statusId])
// }

// model RentalStatus {
//   statusId            Int                   @id
//   statusName          String                @unique
//   Rental              Rental[]
//   VehicleAvailability VehicleAvailability[]
// }

// model User {
//   userId           Int      @id
//   username         String   @unique
//   password         String
//   email            String   @unique
//   userRole         String
//   firstName        String
//   lastName         String
//   phoneNumber      Int
//   registrationDate DateTime
// }

enum userRole {
  VISITOR
  REGISTRATED
  ADMIN
}
