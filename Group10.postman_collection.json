{
	"info": {
		"_postman_id": "63ba7894-29e7-4b0f-9e1b-f4b2de41c147",
		"name": "Group10",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25449457",
		"_collection_link": "https://ntnu-iir-students.postman.co/workspace/WebTek-Group10-Postman-Tests~f456b3d1-662b-4283-9b89-6e107a201a7e/collection/33083543-63ba7894-29e7-4b0f-9e1b-f4b2de41c147?action=share&source=collection_link&creator=25449457"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "{{base_url}}/auth/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('accessToken');\r",
									"});\r",
									"\r",
									"\r",
									"let responseJson = pm.response.json();\r",
									"let accessToken = responseJson.accessToken;\r",
									"\r",
									"pm.environment.set(\"accessToken\", accessToken);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{adminemail}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{adminpassword}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/auth/login wrong info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{adminemail}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "admin123",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/auth/login short password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 Bad request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{adminemail}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/auth/login short password Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 Bad request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all users with auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response has expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an('array');\r",
									"    jsonData.forEach(user => {\r",
									"        pm.expect(user).to.have.property('userId');\r",
									"        pm.expect(user).to.have.property('username');\r",
									"        pm.expect(user).to.have.property('firstName');\r",
									"        pm.expect(user).to.have.property('lastName');\r",
									"        pm.expect(user).to.have.property('emailAddress');\r",
									"        pm.expect(user).to.have.property('phoneNumber');\r",
									"        pm.expect(user).to.have.property('customerType');\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all users no auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one user no auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.equal(201);",
									"});",
									"",
									"pm.test(\"Response contains userId\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('userId');",
									"});",
									"",
									"let responseJson = pm.response.json();",
									"let userId = responseJson.userId;",
									"",
									"pm.environment.set(\"testUserId\", userId);",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"postman\",\r\n    \"emailAddress\": \"post@man.com\",\r\n    \"password\": \"postman1\",\r\n    \"firstName\": \"post\",\r\n    \"lastName\": \"man\",\r\n    \"phoneNumber\": 11223344,\r\n    \"customerType\": \"VISITOR\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one user with auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/{{testUserId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{testUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "username",
								"value": "ThomasNeww"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"PostmanTest3\",\r\n  \"emailAddress\": \"newemail@example.com\",\r\n  \"password\": \"newPassword\",\r\n  \"firstName\": \"NewFirstName\",\r\n  \"lastName\": \"NewLastName\",\r\n  \"phoneNumber\": 1234567890,\r\n  \"customerType\": \"VISITOR\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{testUserId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{testUserId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Vehicles",
			"item": [
				{
					"name": "All vehicles",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/vehicles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vehicles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a vehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response contains vehicleId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('vehicleId');\r",
									"});\r",
									"\r",
									"let responseJson = pm.response.json();\r",
									"let vehicleId = responseJson.vehicleId;\r",
									"\r",
									"pm.environment.set(\"vehicleId\", vehicleId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\r\n        \"manufacturer\": \"PostmanTest\",\r\n        \"model\": \"iOn\",\r\n        \"year\": \"2020\",\r\n        \"vehicleCategory\": \"compact\",\r\n        \"transmission\": \"automatic\",\r\n        \"fuel\": \"electric\",\r\n        \"passengerCapacity\": 4,\r\n        \"extraFeatures\": \"Five doors, very economic\",\r\n        \"mileage\": 3990,\r\n        \"image\": \"ion.jpg\",\r\n        \"dailyPrice\": 200,\r\n        \"rentalCompany\": \"Betrel Ostein\",\r\n        \"rentalCount\": 0,\r\n        \"active\": false\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/vehicles/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vehicles",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Find one vehicles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/vehicles/{{vehicleId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vehicles",
								"{{vehicleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a vehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\r\n        \"manufacturer\": \"PostmanTest\",\r\n        \"model\": \"iOn\",\r\n        \"year\": \"2022\",\r\n        \"vehicleCategory\": \"compact\",\r\n        \"transmission\": \"manuel\",\r\n        \"fuel\": \"electric\",\r\n        \"passengerCapacity\": 4,\r\n        \"extraFeatures\": \"Five doors, very economic\",\r\n        \"mileage\": 3990,\r\n        \"image\": \"ion.jpg\",\r\n        \"dailyPrice\": 200,\r\n        \"rentalCompany\": \"Betrel Ostein\",\r\n        \"rentalCount\": 0,\r\n        \"active\": false\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/vehicles/{{vehicleId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vehicles",
								"{{vehicleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a vehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/vehicles/{{vehicleId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vehicles",
								"{{vehicleId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "All Orders with auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/orders/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "All Orders without auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/orders/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}